global:
  resolve_timeout: 5m

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together
  group_by: ['alertname', 'cluster', 'service']
  
  # When a new group of alerts is created by an incoming alert
  group_wait: 10s
  
  # When the first notification was sent, wait 'group_interval' to send a batch
  group_interval: 10s
  
  # If an alert has successfully been sent, wait 'repeat_interval' to resend
  repeat_interval: 1h
  
  # Default receiver
  receiver: 'default-receiver'
  
  # Child routes
  routes:
    - match:
        severity: critical
      receiver: critical-receiver
      continue: true
    
    - match:
        severity: warning
      receiver: warning-receiver

# Receivers
receivers:
  - name: 'default-receiver'
    # Configure based on your notification preferences
    # Example webhook configuration:
    # webhook_configs:
    #   - url: 'http://your-webhook-url/alerts'
    #     send_resolved: true

  - name: 'critical-receiver'
    # Configure for critical alerts
    # Example email configuration:
    # email_configs:
    #   - to: 'oncall@example.com'
    #     from: 'alertmanager@example.com'
    #     smarthost: 'smtp.example.com:587'
    #     auth_username: 'alertmanager@example.com'
    #     auth_password: 'password'
    #     headers:
    #       Subject: 'CRITICAL: {{ .GroupLabels.alertname }}'

  - name: 'warning-receiver'
    # Configure for warning alerts

# Inhibition rules
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']