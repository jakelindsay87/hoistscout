name: CI
on: [push, pull_request]

jobs:
  test-db:
    name: Database Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hoistscraper_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          cd backend
          poetry install --with dev
      
      - name: Run database tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/hoistscraper_test
        run: |
          cd backend
          poetry run pytest tests/test_db.py -v --cov=hoistscraper --cov-report=term-missing

  test:
    runs-on: ubuntu-latest
    services:
      ollama:
        image: ollama/ollama:latest
        env:
          OLLAMA_GPU: "false"
        ports:
          - "11434:11434"
        options: >-
          --health-cmd "curl -s http://localhost:11434 || exit 1"
          --health-interval 10s --health-timeout 30s --health-retries 3

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Regenerate poetry.lock
        run: |
          cd backend
          pip install poetry
          poetry lock --no-update
      
      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          cd backend
          poetry install --with dev
      
      - name: Install Playwright
        run: |
          cd backend
          poetry run playwright install --with-deps
      
      - name: Run Python linting
        run: |
          cd backend
          poetry run ruff check
      
      - name: Run Python tests
        run: |
          cd backend
          poetry run pytest -q
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install and test frontend
        run: |
          cd frontend
          npm ci
          npm run lint
          npm test 