services:
  # ollama:
  #   image: ollama/ollama:0.1.40
  #   volumes:
  #     - ollama-data:/root/.ollama
  #   command: ["ollama", "serve"]
  #   ports:
  #     - "11434:11434"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:11434"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hoistscraper
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/hoistscraper
      REDIS_URL: redis://redis:6379/0
      OLLAMA_HOST: http://ollama:11434
      CRAWL_CONCURRENCY: "8"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - scraper_data:/data

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:3000"

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/hoistscraper
      REDIS_URL: redis://redis:6379/0
      DATA_DIR: /data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - scraper_data:/data
    command: ["./worker_entrypoint.sh"]

volumes:
  postgres_data:
  redis_data:
  scraper_data:
# volumes:
#   ollama-data: 