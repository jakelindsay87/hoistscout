services:
  # Backend API Service
  - type: web
    name: hoistscout-api
    env: docker
    repo: https://github.com/jakelindsay87/hoistscout
    branch: main
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    healthCheckPath: /api/health
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: SECRET_KEY
        generateValue: true
      - key: REDIS_URL
        value: redis://default:hoistscout2024@redis-19234.c258.us-east-1-4.ec2.cloud.redislabs.com:19234
      - key: USE_GEMINI
        value: "true"
      - key: GEMINI_API_KEY
        sync: false
      - key: ENABLE_DEMO_MODE
        value: "true"
      - key: ENVIRONMENT
        value: production
      - key: USE_DB_QUEUE
        value: "false"

  # Worker Service - BACKGROUND WORKER TYPE
  - type: web
    name: hoistscout-worker
    env: docker
    repo: https://github.com/jakelindsay87/hoistscout
    branch: main
    dockerfilePath: ./backend/Dockerfile.worker
    dockerContext: ./backend
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        value: redis://default:hoistscout2024@redis-19234.c258.us-east-1-4.ec2.cloud.redislabs.com:19234
      - key: USE_GEMINI
        value: "true"
      - key: GEMINI_API_KEY
        sync: false
      - key: USE_DB_QUEUE
        value: "false"

  # Frontend Service
  - type: web
    name: hoistscout-frontend
    env: docker
    repo: https://github.com/jakelindsay87/hoistscout
    branch: main
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend
    envVars:
      - key: VITE_API_URL
        value: https://hoistscout-api.onrender.com